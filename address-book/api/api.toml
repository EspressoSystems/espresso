# Copyright (c) 2022 Espresso Systems (espressosys.com)
#
# This program is free software: you can redistribute it and/or modify it under the terms of the
# GNU General Public License as published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with this program. If
# not, see <https:#www.gnu.org/licenses/>.

[meta]
FORMAT_VERSION = "0.1.0"

[route.insert_pubkey]
PATH = ["/insert_pubkey"]
METHOD = "POST"
DOC = """
Insert a user public key for a signed public key address. Fails with status 400 Bad Request if
key deserialization or the signature check fail.

The request body must be a JSON serialization of struct InsertPubKey.
"""

[route.request_pubkey]
PATH = ["/request_pubkey"]
METHOD = "POST"
DOC = """
Lookup a user public key from a Jellyfish CAP user address. Responds with status 404 Not Found if no
public key has been inserted for the given address. Fails with status 400 Bad Request if key
deserialization or the signature check fail.

The request body must be a JSON serialization of Jellyfish CAP UserAddress.
"""

[route.request_peers]
PATH = ["/request_peers"]
METHOD = "GET"
DOC = """
Fetch all the public key bundles for all peers. Fails with status 500 Internal Server Error if
storage cannot be read.
"""
