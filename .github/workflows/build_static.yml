name: Static Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 0 * * 1"
  workflow_dispatch:

jobs:
  build:
    runs-on: [self-hosted, X64]
    container:
      image: ghcr.io/espressosystems/nix:2.8.1
      volumes:
        - github_nix_281:/nix
    timeout-minutes: 120
    steps:
      - name: Configure Git
        run: |
          git config --global url."https://ancient123:${{ secrets.ORG_GITHUB_PAT }}@github.com/".insteadOf git://github.com/
          git config --global url."https://ancient123:${{ secrets.ORG_GITHUB_PAT }}@github.com/".insteadOf ssh://git@github.com/

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Sanity check that repository builds with nix
        run: |
          cat /etc/nix/nix.conf
          echo $(arch)
          echo $(uname -a)
          git config --global --add safe.directory "$PWD"
          nix run "github:NixOS/nix?ref=780c7731cd3e6fac05c1a13b244b5f7925f0010b" -- develop .#staticShell --option sandbox relaxed -c cargo run --release --bin multi_machine_automation -- --num-txn 3 --verbose

      - name: Compile all executables
        run: |
          nix run "github:NixOS/nix?ref=780c7731cd3e6fac05c1a13b244b5f7925f0010b" -- develop .#staticShell --option sandbox relaxed -c cargo build --release

      - name: Upload address book artifact
        uses: actions/upload-artifact@v3
        with:
          name: address-book-executable
          path: target/x86_64-unknown-linux-musl/release/address-book

      - name: Upload faucet artifact
        uses: actions/upload-artifact@v3
        with:
          name: faucet-executable
          path: target/x86_64-unknown-linux-musl/release/faucet

      - name: Upload validator artifact
        uses: actions/upload-artifact@v3
        with:
          name: validator-executable
          path: target/x86_64-unknown-linux-musl/release/espresso-validator

  docker-address-book:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
        name: Checkout Repository

      - uses: actions/download-artifact@v3
        with:
          name: address-book-executable
          path: target/x86_64-unknown-linux-musl/release/address-book

      - uses: docker/setup-buildx-action@v2
        name: Setup Docker BuildKit (buildx)

      - uses: docker/login-action@v2
        name: Login to Github Container Repo
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/metadata-action@v4
        name: Generate Docker Metadata
        id: meta
        with:
          images: ghcr.io/espressosystems/espresso/address-book

      - uses: docker/build-push-action@v3
        name: Build and Push Docker
        with:
          context: ./
          file: ./docker/address-book.Dockerfile
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  docker-faucet:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
        name: Checkout Repository

      - uses: actions/download-artifact@v3
        with:
          name: faucet-executable
          path: target/x86_64-unknown-linux-musl/release/faucet

      - uses: docker/setup-buildx-action@v2
        name: Setup Docker BuildKit (buildx)

      - uses: docker/login-action@v1
        name: Login to Github Container Repo
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/metadata-action@v4
        name: Generate Docker Metadata
        id: meta
        with:
          images: ghcr.io/espressosystems/espresso/faucet

      - uses: docker/build-push-action@v3
        name: Build and Push Docker
        with:
          context: ./
          file: ./docker/faucet.Dockerfile
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  docker-validator:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
        name: Checkout Repository

      - uses: actions/download-artifact@v3
        with:
          name: validator-executable
          path: target/x86_64-unknown-linux-musl/release/espresso-validator

      - uses: docker/setup-buildx-action@v2
        name: Setup Docker BuildKit (buildx)

      - uses: docker/login-action@v1
        name: Login to Github Container Repo
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/metadata-action@v4
        name: Generate Docker Metadata
        id: meta
        with:
          images: ghcr.io/espressosystems/espresso/validator

      - uses: docker/build-push-action@v3
        name: Build and Push Docker
        with:
          context: ./
          file: ./docker/validator.Dockerfile
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
